
import
  os,
  re,
  strutils,
  strformat
#  tables,

const pix_in_row = 16

proc cvt_file(filename: string)


proc main() =
  echo "/* Auto-generated by pgm2c, do not edit manually! */\n"

  for fn in commandLineParams():
    cvt_file fn


proc cvt_file(filename: string) =
  let name = splitFile(filename)[1]

  var
    fd_in = filename.open()
    line : string

    im_width : uint
    im_height : uint
    im_colors : uint
    im_data = "uint32_t bitmap_" & name & "_data[] = {\n"

    color_mark : bool
    data_sem : bool
    cnt = 0

  while fd_in.readLine(line):
    if line[0] == '#' or line == "P2":
      continue

    elif line =~ re"^(\d+)\s+(\d+)$":
      (im_width, im_height) = (matches[0].parseUInt, matches[1].parseUInt)
      color_mark = true

    elif color_mark:
      im_colors = line.parseUInt
      color_mark = false

    else:
      var num = line

      if num.len < 3: num = ' '.repeat(3 - num.len) & num

      var not_1st_ln = ", " & num

      if cnt == pix_in_row:
        not_1st_ln = ",\n" & num
        cnt = 0

      cnt.inc

      im_data &= (if data_sem: not_1st_ln else: num)

      data_sem = true

  fd_in.close()

  im_data = &"omBitmapT bitmap_{name};\n" &
    &"bitmap_{name}.Width = {im_width};\n" &
    &"bitmap_{name}.Height = {im_height};\n" &
    &"bitmap_{name}.ColorsNumOf = {im_colors};\n" &
    &"bitmap_{name}.Display = &oled1;\n" &
    &"uint16_t image_colors = {im_colors};\n" &
    im_data & "\n};\n" &
    &"bitmap_{name}.RawData = bitmap_{name}_data;\n"

  echo im_data


main()
